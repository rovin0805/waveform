{"version":3,"sources":["Components/Pages/Main/Waveform.js","Components/Pages/Main/TalkerForm.js","Components/Pages/Main/TalkerItem.js","Components/Pages/Main/index.js","Components/App.js","index.js"],"names":["Waveform","props","onLoading","wavesurfer","originalArgs","setState","loaded","state","enableDragSelection","color","on","duration","getDuration","playing","skipBackward","onPosChange","pos","getCurrentTime","secondsToPosition","sec","handleSingleRegionUpdate","e","newState","Object","assign","regions","region","id","handleRegionClick","setTimeout","seekTo","start","regionFlag","onClick","end","handleRegionDone","zoom","direction","currentZoom","params","minPxPerSec","this","className","audioFile","options","barGap","barWidth","barHeight","cursorWidth","height","hideScrollbar","progressColor","responsive","waveColor","volume","onSingleRegionUpdate","onRegionClick","onRegionOut","Date","toISOString","substr","setPlayEnd","clearRegions","handleClearRegionPoints","bind","React","Component","TalkerForm","talker","text","handleSelectRow","row","handleChange","target","name","value","handleSubmit","a","preventDefault","selectedBoard","data","onSaveData","brdno","onSubmit","Grid","container","spacing","item","xs","justify","alignItems","TextField","label","placeholder","style","margin","marginLeft","variant","InputLabelProps","shrink","onChange","fullWidth","sm","Button","type","padding","TalkerItem","onSelectRow","handleRemove","onRemove","Typography","marginTop","InputProps","readOnly","analysisType","regionStart","handleAudioPlay","audioPlaying","play","regionEnd","console","log","list","Main","maxNo","boards","bool","handleSetRegionPoints","handleGetData","map","concat","filter","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b27b19eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactWaves, { Regions } from \"@dschoon/react-waves\";\r\n\r\nexport default class Waveform extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      regionFlag: false,\r\n      playing: false,\r\n      wavesurfer: null,\r\n      duration: 0,\r\n      pos: 0,\r\n      regions: {},\r\n    };\r\n  }\r\n\r\n  onLoading = ({ wavesurfer, originalArgs = [] }) => {\r\n    this.setState({\r\n      loaded: originalArgs[0] === 100,\r\n      wavesurfer,\r\n    });\r\n    this.state.wavesurfer.enableDragSelection({\r\n      color: \"rgba(100, 149, 240, 0.3)\",\r\n    });\r\n    this.state.wavesurfer.on(\"ready\", () =>\r\n      this.setState({ duration: wavesurfer.getDuration() })\r\n    );\r\n    this.state.wavesurfer.on(\"finish\", () => {\r\n      this.setState({ playing: false });\r\n      // go back to the start point\r\n      wavesurfer.skipBackward(this.state.duration);\r\n    });\r\n  };\r\n\r\n  onPosChange = (pos, wavesurfer) => {\r\n    this.setState({\r\n      pos: wavesurfer.getCurrentTime(),\r\n      wavesurfer,\r\n    });\r\n  };\r\n\r\n  // Region\r\n  secondsToPosition = (sec) => {\r\n    return (1 / this.state.wavesurfer.getDuration()) * sec;\r\n  };\r\n\r\n  handleSingleRegionUpdate = (e) => {\r\n    const newState = Object.assign(this.state, {\r\n      regions: {\r\n        [e.region.id]: e.region,\r\n      },\r\n    });\r\n    this.setState(newState);\r\n  };\r\n\r\n  handleRegionClick = (e) => {\r\n    setTimeout(() => {\r\n      this.state.wavesurfer.seekTo(\r\n        this.secondsToPosition(e.originalArgs[0].start)\r\n      );\r\n    }, 50);\r\n\r\n    this.setState({ regionFlag: true });\r\n\r\n    // 부모 컴포넌트 index로 값 넘기기\r\n    this.props.onClick(\r\n      e.originalArgs[0].start,\r\n      e.originalArgs[0].end,\r\n      this.state.wavesurfer\r\n    );\r\n  };\r\n\r\n  handleRegionDone = (e) => {\r\n    if (this.state.regionFlag) {\r\n      // go back to the start point\r\n      setTimeout(() => {\r\n        this.state.wavesurfer.seekTo(\r\n          this.secondsToPosition(e.originalArgs[0].start)\r\n        );\r\n      }, 50);\r\n      //loop prevent\r\n      this.setState({ playing: false });\r\n    }\r\n  };\r\n\r\n  // Zoom\r\n  zoom = (direction) => {\r\n    const { wavesurfer } = this.state;\r\n    const currentZoom = wavesurfer.params.minPxPerSec;\r\n\r\n    if (direction === \"in\") {\r\n      wavesurfer.zoom(currentZoom + 10);\r\n    } else if (direction === \"out\" && currentZoom > 1) {\r\n      wavesurfer.zoom(currentZoom - 10);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { duration, pos, wavesurfer } = this.state;\r\n    return (\r\n      <>\r\n        <div className={\"container example\"}>\r\n          <ReactWaves\r\n            id=\"waveform\"\r\n            audioFile={\r\n              \"https://www.mfiles.co.uk/mp3-downloads/gs-cd-track2.mp3\"\r\n            }\r\n            className={\"react-waves\"}\r\n            options={{\r\n              barGap: 2,\r\n              barWidth: 1.8,\r\n              barHeight: 2,\r\n              cursorWidth: 0,\r\n              height: 200,\r\n              hideScrollbar: true,\r\n              progressColor: \"#EC407A\",\r\n              responsive: true,\r\n              waveColor: \"#D1D6DA\",\r\n            }}\r\n            volume={1}\r\n            zoom={1}\r\n            pos={this.state.pos}\r\n            playing={this.state.playing}\r\n            onPosChange={this.onPosChange}\r\n            onLoading={this.onLoading}\r\n          >\r\n            <Regions\r\n              onSingleRegionUpdate={this.handleSingleRegionUpdate}\r\n              onRegionClick={this.handleRegionClick}\r\n              onRegionOut={this.handleRegionDone}\r\n              regions={this.state.regions}\r\n            />\r\n          </ReactWaves>\r\n          <div>\r\n            {new Date(pos * 1000).toISOString().substr(11, 8)} /{\" \"}\r\n            {new Date(duration * 1000).toISOString().substr(11, 8)}\r\n          </div>\r\n          <button\r\n            className=\"play button\"\r\n            onClick={() => {\r\n              this.setState({\r\n                playing: !this.state.playing,\r\n                regionFlag: false,\r\n              });\r\n              this.state.wavesurfer.on(\"audioprocess\", () => {\r\n                this.state.wavesurfer.setPlayEnd(\r\n                  this.state.wavesurfer.getDuration()\r\n                );\r\n              });\r\n            }}\r\n          >\r\n            {!this.state.playing ? \"Whole PLAY ▶\" : \"PAUSE ⏸\"}\r\n          </button>\r\n\r\n          {this.state.regionFlag ? (\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ playing: !this.state.playing });\r\n              }}\r\n            >\r\n              {!this.state.playing ? \"Region PLAY\" : \"Pause\"}\r\n            </button>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n\r\n          <br />\r\n          <button\r\n            className=\"clearRegions button\"\r\n            onClick={() => {\r\n              wavesurfer.clearRegions();\r\n              this.props.handleClearRegionPoints();\r\n              this.setState({ regionFlag: false });\r\n            }}\r\n          >\r\n            Clear All Regions\r\n          </button>\r\n\r\n          <div className=\"zoom-buttons\">\r\n            <button\r\n              className=\"zoom-in button\"\r\n              onClick={this.zoom.bind(this, \"in\")}\r\n            >\r\n              {\"➕️\"} Zoom In\r\n            </button>\r\n            <button\r\n              className=\"zoom-out button\"\r\n              onClick={this.zoom.bind(this, \"out\")}\r\n            >\r\n              {\"➖️\"} Zoom Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class TalkerForm extends React.Component {\r\n  state = {\r\n    talker: \"\",\r\n    text: \"\",\r\n  };\r\n\r\n  handleSelectRow = (row) => {\r\n    this.setState(row);\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let selectedBoard = this.props.selectedBoard;\r\n    const { talker, text } = this.state;\r\n    let data = {\r\n      talker,\r\n      text,\r\n    };\r\n    this.props.onSaveData(data, selectedBoard.brdno);\r\n    this.setState({\r\n      talker: \"\",\r\n      text: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <Grid container spacing={3} item xs={12}>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={3}\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              label=\"발화인\"\r\n              placeholder=\"발화인을 입력하세요\"\r\n              style={{ margin: 8, marginLeft: 120 }}\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              name=\"talker\"\r\n              value={this.state.talker}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div>\r\n              <TextField\r\n                label=\"전사할 내용 입력\"\r\n                style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                name=\"text\"\r\n                value={this.state.text}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            sm={1}\r\n            direction=\"column\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ margin: 20, padding: 10 }}\r\n            >\r\n              입력\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass TalkerItem extends Component {\r\n  handleSelectRow = () => {\r\n    const { row, onSelectRow } = this.props;\r\n    onSelectRow(row);\r\n  };\r\n\r\n  handleRemove = () => {\r\n    const { row, onRemove } = this.props;\r\n    onRemove(row.brdno);\r\n  };\r\n\r\n  render() {\r\n    const { row } = this.props;\r\n    return (\r\n      <Grid container spacing={1} item sm={12}>\r\n        {/* 행번호, 발화인, 분석태그 start */}\r\n        <Grid\r\n          container\r\n          item\r\n          sm={1}\r\n          direction=\"column\"\r\n          justify=\"space-between\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Typography style={{ marginTop: 25, marginLeft: 20 }}>\r\n            {row.brdno}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          sm={2}\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <TextField\r\n            id=\"standard-read-only-input\"\r\n            label=\"발화인\"\r\n            value={row.talker}\r\n            style={{ margin: 8, marginLeft: 20 }}\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            onClick={this.handleSelectRow}\r\n          />\r\n\r\n          <Typography variant=\"h6\" style={{ marginTop: 5, marginLeft: 80 }}>\r\n            {row.analysisType}\r\n          </Typography>\r\n        </Grid>\r\n        {/* 행번호, 발화인, 분석태그 end */}\r\n\r\n        {/* 발화내용 start */}\r\n        <Grid container item sm={8}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n          >\r\n            <TextField\r\n              id=\"outlined-full-width\"\r\n              label=\"발화내용\"\r\n              value={row.text}\r\n              style={{ margin: 8 }}\r\n              margin=\"normal\"\r\n              variant=\"filled\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n              onClick={this.handleSelectRow}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* 발화내용 end */}\r\n\r\n        {/* 삭제, 분석상세보기 버튼 start */}\r\n        <Grid\r\n          item\r\n          sm={1}\r\n          container\r\n          direction=\"column\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"center\"\r\n        >\r\n          {this.props.row.regionStart ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              style={{ margin: 20, padding: 10 }}\r\n              onClick={() => {\r\n                const {\r\n                  handleAudioPlay,\r\n                  audioPlaying,\r\n                  row,\r\n                  wavesurfer,\r\n                } = this.props;\r\n\r\n                // go back to the start point when it's clickced\r\n                wavesurfer.seekTo(\r\n                  (1 / wavesurfer.getDuration()) * row.regionStart\r\n                );\r\n\r\n                wavesurfer.play();\r\n\r\n                wavesurfer.on(\"audioprocess\", () => {\r\n                  wavesurfer.play();\r\n                  wavesurfer.setPlayEnd(row.regionEnd);\r\n                  // console.log(\"cur\", wavesurfer.getCurrentTime());\r\n                });\r\n\r\n                console.log(wavesurfer.regions.list);\r\n\r\n                // wavesurfer.clearRegions();\r\n\r\n                // loop\r\n                // wavesurfer.on(\"pause\", () => {\r\n                //   wavesurfer.play();\r\n                // });\r\n\r\n                // console.log(`${row.brdno}번 구간 시작 : ${row.regionStart}`);\r\n                // console.log(`${row.brdno}번 구간 끝 : ${row.regionEnd}`);\r\n                // console.log(\"wavesurfer : \", wavesurfer);\r\n              }}\r\n            >\r\n              ▶{/* {this.props.wavesurfer.isPlaying() ? \"Play\" : \"Pause\"} */}\r\n            </Button>\r\n          ) : (\r\n            <span />\r\n          )}\r\n        </Grid>\r\n        {/* 삭제, 편집, 분석상세보기 버튼 end */}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TalkerItem;\r\n","import React, { Component } from \"react\";\r\nimport Waveform from \"./Waveform\";\r\nimport TalkerForm from \"./TalkerForm\";\r\nimport TalkerItem from \"./TalkerItem\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    maxNo: 1,\r\n    boards: [\r\n      {\r\n        brdno: 0,\r\n        talker: \"코스모스\",\r\n        text: \"코스모스는 가을에 피어요.\",\r\n        // analysisType: \"morpAPI\",\r\n        // analysisResult: \"\",\r\n      },\r\n    ],\r\n    selectedBoard: {},\r\n    start: null, // mp3/selected region start time\r\n    end: null, // mp3/selected region end time\r\n    wavesurfer: null,\r\n    audioPlaying: false,\r\n  };\r\n\r\n  handleAudioPlay = (bool) => {\r\n    this.setState({ audioPlaying: bool });\r\n  };\r\n\r\n  // 자식 컴포넌트 waveform에서 받아온 값\r\n  handleSetRegionPoints = (start = null, end = null, wavesurfer = null) => {\r\n    this.setState({ start, end, wavesurfer });\r\n    console.log(`클릭 구간 시작 : ${start}s / 클릭 구간 끝 : ${end}s`);\r\n  };\r\n\r\n  handleGetData = (data, brdno) => {\r\n    if (!brdno) {\r\n      // Insert\r\n      this.setState({\r\n        maxNo: this.state.maxNo + 1,\r\n        boards: this.state.boards.concat({\r\n          brdno: this.state.maxNo,\r\n          ...data,\r\n          regionStart: this.state.start,\r\n          regionEnd: this.state.end,\r\n        }),\r\n        selectedBoard: {},\r\n      });\r\n    } else {\r\n      // Update\r\n      this.setState({\r\n        boards: this.state.boards.map((row) =>\r\n          brdno === row.brdno\r\n            ? {\r\n                brdno,\r\n                ...data,\r\n                regionStart: this.state.start,\r\n                regionEnd: this.state.end,\r\n              }\r\n            : row\r\n        ),\r\n        selectedBoard: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRemove = (brdno) => {\r\n    if (brdno !== 0)\r\n      this.setState({\r\n        boards: this.state.boards.filter((row) => row.brdno !== brdno),\r\n      });\r\n  };\r\n\r\n  handleSelectRow = (row) => {\r\n    this.setState({ selectedBoard: row });\r\n  };\r\n\r\n  handleClearRegionPoints = () => {\r\n    this.setState({ start: null, end: null }, () =>\r\n      console.log(this.state.start, this.state.end)\r\n    );\r\n    console.log(\"Clear Region start&end points\");\r\n  };\r\n\r\n  render() {\r\n    const { boards, selectedBoard, wavesurfer } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Waveform\r\n          onClick={this.handleSetRegionPoints}\r\n          handleAudioPlay={this.handleAudioPlay}\r\n          audioPlaying={this.state.audioPlaying}\r\n          handleClearRegionPoints={this.handleClearRegionPoints}\r\n        />\r\n\r\n        {/* 입력창 */}\r\n        <TalkerForm\r\n          onSaveData={this.handleGetData}\r\n          selectedBoard={selectedBoard}\r\n        />\r\n\r\n        {/* 전사창 */}\r\n        {boards.map((row) => (\r\n          <TalkerItem\r\n            key={row.brdno}\r\n            row={row}\r\n            onRemove={this.handleRemove}\r\n            onSelectRow={this.handleSelectRow}\r\n            handleAudioPlay={this.handleAudioPlay}\r\n            audioPlaying={this.state.audioPlaying}\r\n            handleSetRegionPoints={this.handleSetRegionPoints}\r\n            wavesurfer={wavesurfer}\r\n          />\r\n        ))}\r\n        {console.log(\"boards\", boards)}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./Pages/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}